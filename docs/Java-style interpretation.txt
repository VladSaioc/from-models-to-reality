// Hardcoded example:
//
//  |P| | |█|
//  |█|█| |█|
//  | | | |█|
//  | |█| |T|
//  
//
//own syntax:

Main(){

// main entities
public player = new vector2(0, 0);
public target = new vector2(3, 3);

// obstacles
public wall0 = new vector2(0, 3);
public wall1 = new vector2(1, 0);
public wall2 = new vector2(1, 1);
public wall3 = new vector2(1, 3);
public wall4 = new vector2(2, 3);
public wall5 = new vector2(3, 1);
//also put them in a list?

// method used to move player across map
void Move(string direction){
if (direction == "left") player = new vector2(this.player.x - 1, this.player.y);
if (direction == "right") player = new vector2(this.player.x + 1, this.player.y);
if (direction == "up") player = new vector2(this.player.x, this.player.y - 1);
if (direction == "down") player = new vector2(this.player.x, this.player.y + 1);
}

// method used to check if player can move to specific direction
boolean canMove(string direction){
movePosition = new vector2(this.player.x - 1, this.player.y);
if (direction == "left") foreach (vector2 wall in listOfWalls) { if (movePosition.x == wall.x && movePosition.y == wall.y) return false;
//same for the other 3 directions
}

// method to check win
checkWinCondition(){
if (player.x == target.x && player.y == target.y) cout<<"Congrats, you won!";
}

// example of usage on keypress left:
if (canMove("left")) {
	Move("left");
	checkWinCondition();
	}
}